# Generated by Django 5.2.1 on 2025-05-14 08:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='RecommendedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of the product (from summary CSV 'name').", max_length=200)),
                ('slug', models.SlugField(help_text="URL-friendly identifier (from CSV 'reco_slug'). Must be unique.", max_length=220, unique=True)),
                ('short_description', models.TextField(blank=True, help_text="Brief description for card views (from summary CSV 'short_description').", null=True)),
                ('main_description_md', models.TextField(blank=True, help_text="Main descriptive content in Markdown (from content CSV 'main_description_md'). Used if no sections.", null=True)),
                ('product_url', models.URLField(help_text="Link to the product (from summary CSV 'product_url').", max_length=500)),
                ('image_url', models.URLField(blank=True, help_text="URL for the product image (from summary CSV 'image_url').", max_length=500, null=True)),
                ('category', models.CharField(blank=True, help_text="Optional category (e.g., Book, Course, Software, Hardware) (from summary CSV 'category').", max_length=100)),
                ('order', models.PositiveIntegerField(default=0, help_text="Order in which to display products (from summary CSV 'order').")),
                ('page_meta_title', models.CharField(blank=True, help_text="SEO Title for the recommendation's detail page (from content CSV 'page_meta_title'). Falls back to name.", max_length=255, null=True)),
                ('page_meta_description', models.TextField(blank=True, help_text="SEO Meta Description for the detail page (from content CSV 'page_meta_description'). Falls back to short_description.", null=True)),
                ('page_meta_keywords', models.CharField(blank=True, help_text="SEO Meta Keywords for the detail page (comma-separated) (from content CSV 'page_meta_keywords').", max_length=255, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RecommendationSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_order', models.FloatField(default=1.0, help_text='Order of this section within the recommendation page (e.g., 1, 1.1, 2).')),
                ('section_title', models.CharField(blank=True, help_text='Title of this section (optional).', max_length=255, null=True)),
                ('section_content_markdown', models.TextField(blank=True, help_text='Main content of the section in Markdown format.', null=True)),
                ('recommendation', models.ForeignKey(help_text='The recommended product this section belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='recommendations.recommendedproduct')),
            ],
            options={
                'ordering': ['recommendation', 'section_order'],
                'unique_together': {('recommendation', 'section_order')},
            },
        ),
    ]
